dots = ["nvidia", "hyde", "dunst", "kitty", "rofi"]
default_action = "preserve"
package_manager = ["auto"]                             # "auto" | "pacman" | "dnf"
git = "https://github.com/HyDE-Project/HyDE.git"       # Only supports single repo
git_branch = "master"                                  # Default branch
start_command = ["echo 'Starting Deez-Dots for HydE'"]
end_command = ["echo 'Command ends'"]

[dependency]
'yay,paru' = [""]
flatpak = ["dev.vencord.Vesktop"]
pacman = [
    "hyprland",
    "pipewire",
    "pipewire-pulse",
    "pipewire-jack",
    "pipewire-alsa",
    "gst-plugin-pipewire",
    "wireplumber",
    "pavucontrol",
]
dnf = ["another-dependency"]

[hyde]
action = "preserve"                      # "preserve" | "overwrite" | "sync" // If child action is not defined use parent action
pre_command = ["echo 'enter hyde' "]
post_command = ["echo 'exit hyde dots'"]

[hyde.dependency]
pacman = ["hyprland", "nwg-look", "qt5ct", "qt6ct"]
dnf = ["another-dependency"]


[[hyde.files]]
source_root = "Configs/.config"
target_root = "$XDG_CONFIG_HOME"
paths = [
    "hyde/wallbash",
    "hypr/hyprland.conf",
    "hypr/windowrules.conf",
    "hypr/keybindings.conf",
    "hypr/monitors.conf",
    "hypr/animations.conf",
    "hypr/themes",
]

[[hyde.files]]
source_root = "Configs/.config"
target_root = "${XDG_CONFIG_HOME}"
paths = ["gtk-3.0", "Kvantum", "nwg-look", "qt5ct", "qt6ct", "xsettingsd"]

[[hyde.files]]
source_root = "Configs"
target_root = "${HOME}"
paths = ".gtkrc-2.0"

[[hyde.files]]
action = "overwrite"
source_root = "Configs"
target_root = "${HOME}"
paths = [".local/lib/hyde", ".local/share/hyde"]

[[hyde.files]]
action = "sync"
source_root = "Configs/.local/share"
target_root = "${XDG_DATA_HOME}"
# paths = ["icons/Wallbash-Icon", "themes/Wallbash-Gtk"]

[waybar]
pre_command = ["echo 'Pre commands '"]
post_command = ["echo 'HyDE backed up!'"]

[waybar.dependency]
pacman = ["waybar"]

[[waybar.files]]
target_root = "${XDG_CONFIG_HOME}/waybar"
paths = ["config.ctl", "modules", "config.jsonc", "theme.css", "style.css"]

[dunst]
pre_command = ["echo 'enter dunst'"]
post_command = ["echo 'exit dunst'"]


[dunst.dependency]
pacman = ["dunst"]


[[dunst.files]]
source_root = "Configs/.config"
target_root = "${XDG_CONFIG_HOME}"
paths = "dunst"

[[dunst.files]]
action = "overwrite"
source_root = "Configs/.local/share/hyde/wallbash/scripts"
target_root = "${HOME}/.local/share/hyde/wallbash/scripts"
paths = "dunst.sh"

[kitty]
pre_command = ["echo 'enter kitty!'"]
post_command = ["echo 'exit kitty!'"]

[kitty.dependency]
pacman = ["kitty"] # dependency

[[kitty.files]]
action = "preserve"
source_root = "Configs/.config/kitty"
target_root = "${XDG_CONFIG_HOME}/kitty"
paths = ["kitty.conf"]

[[kitty.files]]
action = "overwrite"
source_root = "Configs/.local/share/hyde/wallbash/scripts"
target_root = "${XDG_DATA_HOME}/hyde/wallbash/scripts"
paths = "kitty.sh"

[[kitty.files]]
action = "sync"
source_root = "Configs/.config/kitty"
target_root = "${XDG_CONFIG_HOME}"
paths = ["theme.conf", "hyde.conf"]


#  nvidia.conf is separate because it has a different dependency
[nvidia]
pre_command = ["echo 'enter nvidia'", "exit 0"] # Pre commands
post_command = "echo 'exit nvidia!'"            # Post commands

[[nvidia.files]]
action = "preserve"
source_root = "Configs/.config/hypr"
target_root = "${XDG_CONFIG_HOME}/hypr"
paths = "nvidia.conf"


[nvidia.dependency]
pacman = ["nvidia-utils", "nvidia"]
dnf = ["another-dependency"]


[rofi]
action = "sync"                    # "preserve" | "overwrite" | "sync" // If child action is not defined use parent action
pre_command = "echo 'enter rofi'"  # Pre commands
post_command = "echo 'exit rofi!'" # Post commands

[rofi.dependency]
pacman = ["rofi-wayland"] # dependency

[[rofi.files]]
source_root = "Configs/.config"
target_root = "${XDG_CONFIG_HOME}"
paths = "rofi"
